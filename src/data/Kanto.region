{
  "areas": {
    "pallet": {
      "items": [],
      "events": [
        {
          "startFlag": "",
          "movementFlags": ["FIRSTMON"],
          "eventFlags": ["OAKPARCEL"],
          "subEvents": [
            {
              "type": "PokémonChoice",
              "prompt": "Who will be your first partner?",
              "level": 5,
              "options": ["Bulbasaur, Charmander, Squirtle"],
              "before": ["You're finally about to start your Pokémon adventure!",
                "You go to Professor Oak's lab to get your very first Pokémon.",
                "When you get there, you only find {{rival}}.",
                "So, you decide to go out on Route 1 by yourself.",
                "Before you can take a step into the tall grass, a voice calls out to you.",
                "It's Professor Oak!",
                "Oak: Hey! Wait, Don't go out!",
                "Oak: It's unsafe! Wild Pokémon live in tall grass!",
                "Oak: You need Pokémon for protection.",
                "I know! Here, come with me!",
                "Professor Oak leads you into his lab, where {{rival}} is waiting.",
                "{{rival}}: Gramps! I'm fed up with waiting!",
                "Oak: {{rival}}? Let me think...",
                "Oak: Oh, that's right! I told you to come! Just wait!",
                "Oak: Here, {{player}}.",
                "Oak: There are three Pokémon here. Haha!",
                "Oak: The Pokémon are held inside these Poké Balls.",
                "Oak:When I was young, I was a serious Pokémon trainer.",
                "Oak: But now, in my old age, I have only these three left.",
                "Oak: You can have one. Go on, choose!",
                "{{rival}}: Hey! Gramps! No Fair! What about me?",
                "Oak: Be patient, {{rival}}. You can have one too!"],
              "after": ["As soon as you've made your choice, {{rival}} runs over to make his."]
            },
            {
              "before": [
                "{{rival}}: Wait, {{player}}! Let's check out our Pokémon!",
                "{{rival}}: Come on, I'll take you on!"],
              "after": [
                "{{rival}}: Okay! I'll make my Pokémon battle to toughen it up!",
                "{{rival}}: {{player}}! Gramps! Smell you later!"],
              "type": "RivalBattle",
              "intro": "Come on, I'll take you on!",
              "winMsg": "WHAT? Unbelievable! I picked the wrong Pokémon!",
              "loseMsg": "Am I great or what?",
              "money": 80,
              "parties": [
                [
                  {
                    "species": "Charmander",
                    "level": 5
                  }
                ],
                [
                  {
                    "species": "Squirtle",
                    "level": 5
                  }
                ],
                [
                  {
                    "species": "Bulbasaur",
                    "level": 5
                  }
                ]
              ]
            }
          ]
        }
      ]
    },
    "one": {
      "name": "Route 1"
    },
    "viridian": {
      "name": "Viridian City",
      "events":  [
        {
          "startFlag": "OAKPARCEL",
          "eventFlags": ["GETDEX"],
          "subEvents": [
            {
              "before": [
                "As you head into Viridian City's Poké Mart,",
                "the cashier calls you over to the register.",
                "\"Hey, you came from Pallet Town, right?\"",
                "\"Can you deliver this package to Professor Oak?",
                "\"He had it on special order.\""],
              "after": [
                "Tell him I said hi!"
              ],
              "type": "Item",
              "item": "OAKPARCEL",
              "amount": 1
            }
          ]
        }
      ]
    },
    "two": {
      "name": "Route 2"
    },
    "vforest": {
      "name": "Viridian Forest",
      "trainers": [
        {
          "type": "Bug Catcher",
          "name": "Rick",
          "double": false,
          "greeting": "Generic Greeting",
          "winMsg": "Generic Win Message",
          "loseMsg": "Generic Loss Message",
          "money": 72,
          "party": [
            {
              "species": "Weedle",
              "level": 6
            },
            {
              "species": "Caterpie",
              "level": 6
            }
          ]
        }
      ]
    }
  }
}